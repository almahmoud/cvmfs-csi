kind: DaemonSet
apiVersion: apps/v1beta2
metadata:
  name: csi-cvmfsplugin
  labels:
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: csi-cvmfsplugin
  template:
    metadata:
      labels:
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        app: csi-cvmfsplugin
    spec:
      serviceAccount: cvmfs-nodeplugin
      hostNetwork: true
      containers:
        - name: csi-driver-registrar
          image: {{ .Values.csiPlugin.nodeDriverImage }}
          args:
            - "--csi-address=/csi/csi.sock"
            - "--kubelet-registration-path={{ .Values.csiPlugin.pluginDirectory }}/csi.sock"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/csi-cvmfsplugin /registration/csi-cvmfsplugin-reg.sock"]
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: csi-cvmfsplugin
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: {{ .Values.csiPlugin.image }}
          args :
            {{- range $arg := .Values.csiPlugin.args }}
            - {{ $arg | quote -}}
            {{- end }}
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:/{{ .Values.csiPlugin.pluginDirectory }}/csi.sock
          imagePullPolicy: "Always"
          volumeMounts:
            - name: plugin-dir
              mountPath: {{ .Values.csiPlugin.pluginDirectory }}
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - mountPath: /sys
              name: host-sys
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
            - name: host-dev
              mountPath: /dev
            {{- range $key, $entry := .Values.configs }}
            - name: cvmfs-config
              mountPath: /etc/cvmfs/{{ $entry.mountPath }}
              subPath: {{ $key }}
            {{- end }}
            - name: cvmfs-cache
              mountPath: {{ .Values.cache.mountPath }}
      volumes:
        - name: plugin-dir
          hostPath:
            path: {{ .Values.csiPlugin.pluginDirectory }}
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        - name: host-sys
          hostPath:
            path: /sys
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: host-dev
          hostPath:
            path: /dev
        - name: cvmfs-config
          configMap:
            name: cvmfs-configmap
        - name: cvmfs-cache
          persistentVolumeClaim:
            claimName: cvmfs-cache-pvc
